{
  "name": "Trade Ease - Supabase Integration",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "trade-webhook",
        "responseMode": "onReceived",
        "responseData": "success"
      },
      "id": "webhook-trigger",
      "name": "Trade Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 300],
      "webhookId": "trade-ease-webhook"
    },
    {
      "parameters": {
        "functionCode": "// Extract and validate trade data\nconst tradeData = items[0].json;\n\n// Validate required fields\nconst requiredFields = ['buyer_id', 'seller_id', 'product_id', 'quantity', 'price'];\nconst missingFields = requiredFields.filter(field => !tradeData[field]);\n\nif (missingFields.length > 0) {\n  throw new Error(`Missing required fields: ${missingFields.join(', ')}`);\n}\n\n// Add metadata\ntradeData.created_at = new Date().toISOString();\ntradeData.status = 'pending';\ntradeData.trade_id = `TRADE-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n\nreturn [{\n  json: tradeData\n}];"
      },
      "id": "validate-data",
      "name": "Validate Trade Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [450, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{$env.SUPABASE_URL}}/rest/v1/trades",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{$env.SUPABASE_SERVICE_KEY}}"
            },
            {
              "name": "Authorization",
              "value": "Bearer {{$env.SUPABASE_SERVICE_KEY}}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "return=representation"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify($json) }}"
      },
      "id": "insert-trade",
      "name": "Insert Trade to Supabase",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [650, 300]
    },
    {
      "parameters": {
        "functionCode": "// Create notification data\nconst trade = items[0].json[0]; // Supabase returns array\nconst notifications = [];\n\n// Notification for buyer\nnotifications.push({\n  user_id: trade.buyer_id,\n  type: 'trade_created',\n  title: 'New Trade Created',\n  message: `Your trade ${trade.trade_id} has been created`,\n  data: {\n    trade_id: trade.id,\n    amount: trade.price * trade.quantity\n  },\n  read: false,\n  created_at: new Date().toISOString()\n});\n\n// Notification for seller\nnotifications.push({\n  user_id: trade.seller_id,\n  type: 'trade_created',\n  title: 'New Trade Order',\n  message: `You have a new trade order ${trade.trade_id}`,\n  data: {\n    trade_id: trade.id,\n    amount: trade.price * trade.quantity\n  },\n  read: false,\n  created_at: new Date().toISOString()\n});\n\nreturn notifications.map(notif => ({ json: notif }));"
      },
      "id": "create-notifications",
      "name": "Create Notifications",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [850, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{$env.SUPABASE_URL}}/rest/v1/notifications",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{$env.SUPABASE_SERVICE_KEY}}"
            },
            {
              "name": "Authorization",
              "value": "Bearer {{$env.SUPABASE_SERVICE_KEY}}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify($json) }}"
      },
      "id": "insert-notifications",
      "name": "Insert Notifications",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [1050, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{$env.SUPABASE_URL}}/rest/v1/rpc/calculate_trade_fees",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{$env.SUPABASE_SERVICE_KEY}}"
            },
            {
              "name": "Authorization",
              "value": "Bearer {{$env.SUPABASE_SERVICE_KEY}}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify({ trade_id: $node['insert-trade'].json[0].id }) }}"
      },
      "id": "calculate-fees",
      "name": "Calculate Trade Fees",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [850, 450]
    },
    {
      "parameters": {
        "fromEmail": "noreply@tradease.com",
        "toEmail": "={{ $node['insert-trade'].json[0].buyer_email }}",
        "subject": "Trade Confirmation - {{ $node['insert-trade'].json[0].trade_id }}",
        "text": "Your trade has been successfully created.\n\nTrade ID: {{ $node['insert-trade'].json[0].trade_id }}\nAmount: ${{ $node['insert-trade'].json[0].price * $node['insert-trade'].json[0].quantity }}\nStatus: {{ $node['insert-trade'].json[0].status }}\n\nThank you for using Trade Ease!",
        "html": "<h2>Trade Confirmation</h2><p>Your trade has been successfully created.</p><table><tr><td><strong>Trade ID:</strong></td><td>{{ $node['insert-trade'].json[0].trade_id }}</td></tr><tr><td><strong>Amount:</strong></td><td>${{ $node['insert-trade'].json[0].price * $node['insert-trade'].json[0].quantity }}</td></tr><tr><td><strong>Status:</strong></td><td>{{ $node['insert-trade'].json[0].status }}</td></tr></table><p>Thank you for using Trade Ease!</p>"
      },
      "id": "send-email",
      "name": "Send Confirmation Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [1250, 300],
      "credentials": {
        "smtp": {
          "id": "1",
          "name": "SMTP Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $node['insert-trade'].json[0].price * $node['insert-trade'].json[0].quantity }}",
              "operation": "larger",
              "value2": 10000
            }
          ]
        }
      },
      "id": "check-amount",
      "name": "Check Trade Amount",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [650, 450]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{$env.SUPABASE_URL}}/rest/v1/compliance_checks",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{$env.SUPABASE_SERVICE_KEY}}"
            },
            {
              "name": "Authorization",
              "value": "Bearer {{$env.SUPABASE_SERVICE_KEY}}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify({ trade_id: $node['insert-trade'].json[0].id, check_type: 'high_value', status: 'pending' }) }}"
      },
      "id": "compliance-check",
      "name": "Create Compliance Check",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [850, 600]
    }
  ],
  "connections": {
    "webhook-trigger": {
      "main": [
        [
          {
            "node": "validate-data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "validate-data": {
      "main": [
        [
          {
            "node": "insert-trade",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "insert-trade": {
      "main": [
        [
          {
            "node": "create-notifications",
            "type": "main",
            "index": 0
          },
          {
            "node": "check-amount",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create-notifications": {
      "main": [
        [
          {
            "node": "insert-notifications",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "insert-notifications": {
      "main": [
        [
          {
            "node": "send-email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check-amount": {
      "main": [
        [
          {
            "node": "compliance-check",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "calculate-fees",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "id": "trade-ease-supabase-workflow"
} 